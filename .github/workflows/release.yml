name: Release

on:
  push:
    tags: [ "v*" ]  # 推送 tag 时触发 (例如 v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            suffix: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            suffix: ".exe"
          - os: macos-latest
            goos: darwin
            goarch: amd64
            suffix: ""
          - os: macos-latest  # 额外构建 macOS ARM 版本
            goos: darwin
            goarch: arm64
            suffix: ""
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0  # 禁用 CGO 获得静态二进制文件
        run: |
          go build -v -o bin/psocks-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }} .
          
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: psocks-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/psocks-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/psocks-linux-amd64
            artifacts/psocks-windows-amd64.exe
            artifacts/psocks-darwin-amd64
            artifacts/psocks-darwin-arm64
          draft: false
          prerelease: false